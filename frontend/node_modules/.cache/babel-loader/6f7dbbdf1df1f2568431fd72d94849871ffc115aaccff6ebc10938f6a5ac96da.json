{"ast":null,"code":"class Auth {\n  constructor({\n    baseUrl,\n    headers\n  }) {\n    this.checkToken = token => {\n      return fetch(`${this._url}/users/me`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        }\n      }).then(this._handleResponse);\n    };\n    this._url = baseUrl;\n    this._headers = headers;\n    const BASE_URL = 'http://localhost:3000';\n  }\n  _handleResponse(res) {\n    if (!res.ok) {\n      return Promise.reject(`Ошибка ${res.status}`);\n    }\n    return res.json();\n  }\n  register(password, email) {\n    return fetch(`https://api.imalexduh.students.nomoredomainsmonster.ru/signup`, {\n      method: 'POST',\n      password: 'include',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        password: password,\n        email: email\n      })\n    }).then(this._handleResponse);\n  }\n  auth(data) {\n    return fetch(`${this._url}/signin`, {\n      method: 'POST',\n      password: 'include',\n      headers: this._headers,\n      body: JSON.stringify({\n        password: data.password,\n        email: data.email\n      })\n    }).then(this._handleResponse);\n  }\n}\nconst auth = new Auth({\n  baseUrl: 'http://localhost:3000',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nexport default auth;","map":{"version":3,"names":["Auth","constructor","baseUrl","headers","checkToken","token","fetch","_url","method","Authorization","then","_handleResponse","_headers","BASE_URL","res","ok","Promise","reject","status","json","register","password","email","body","JSON","stringify","auth","data"],"sources":["C:/Users/Алексей/dev/react-mesto-api-full-gha/frontend/src/utils/auth.js"],"sourcesContent":["class Auth {\n    constructor({ baseUrl, headers }) {\n        this._url = baseUrl;\n        this._headers = headers;\n        const BASE_URL = 'http://localhost:3000';\n    }\n\n    _handleResponse(res) {\n        if (!res.ok) {\n            return Promise.reject(`Ошибка ${res.status}`);\n        }\n        return res.json();\n    }\n\n    register(password, email) {\n        return fetch(`https://api.imalexduh.students.nomoredomainsmonster.ru/signup`, {\n            method: 'POST',\n            password: 'include',\n            headers: {\n                'Content-Type': 'application/json'\n              },\n            body: JSON.stringify({\n                password: password,\n                email: email\n            })\n        }).then(this._handleResponse)\n    }\n\n    auth(data) {\n        return fetch(`${this._url}/signin`, {\n            method: 'POST',\n            password: 'include',\n            headers: this._headers,\n            body: JSON.stringify({\n                password: data.password,\n                email: data.email\n            })\n        }).then(this._handleResponse)\n    }\n\n    checkToken = (token) => {\n        return fetch(`${this._url}/users/me`, {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${token}`,\n          },\n        }).then(this._handleResponse)\n      };\n}\n\nconst auth = new Auth({\n    baseUrl: 'http://localhost:3000',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n  \n  export default auth;"],"mappings":"AAAA,MAAMA,IAAI,CAAC;EACPC,WAAWA,CAAC;IAAEC,OAAO;IAAEC;EAAQ,CAAC,EAAE;IAAA,KAuClCC,UAAU,GAAIC,KAAK,IAAK;MACpB,OAAOC,KAAK,CAAE,GAAE,IAAI,CAACC,IAAK,WAAU,EAAE;QACpCC,MAAM,EAAE,KAAK;QACbL,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClCM,aAAa,EAAG,UAASJ,KAAM;QACjC;MACF,CAAC,CAAC,CAACK,IAAI,CAAC,IAAI,CAACC,eAAe,CAAC;IAC/B,CAAC;IA9CC,IAAI,CAACJ,IAAI,GAAGL,OAAO;IACnB,IAAI,CAACU,QAAQ,GAAGT,OAAO;IACvB,MAAMU,QAAQ,GAAG,uBAAuB;EAC5C;EAEAF,eAAeA,CAACG,GAAG,EAAE;IACjB,IAAI,CAACA,GAAG,CAACC,EAAE,EAAE;MACT,OAAOC,OAAO,CAACC,MAAM,CAAE,UAASH,GAAG,CAACI,MAAO,EAAC,CAAC;IACjD;IACA,OAAOJ,GAAG,CAACK,IAAI,CAAC,CAAC;EACrB;EAEAC,QAAQA,CAACC,QAAQ,EAAEC,KAAK,EAAE;IACtB,OAAOhB,KAAK,CAAE,+DAA8D,EAAE;MAC1EE,MAAM,EAAE,MAAM;MACda,QAAQ,EAAE,SAAS;MACnBlB,OAAO,EAAE;QACL,cAAc,EAAE;MAClB,CAAC;MACHoB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACjBJ,QAAQ,EAAEA,QAAQ;QAClBC,KAAK,EAAEA;MACX,CAAC;IACL,CAAC,CAAC,CAACZ,IAAI,CAAC,IAAI,CAACC,eAAe,CAAC;EACjC;EAEAe,IAAIA,CAACC,IAAI,EAAE;IACP,OAAOrB,KAAK,CAAE,GAAE,IAAI,CAACC,IAAK,SAAQ,EAAE;MAChCC,MAAM,EAAE,MAAM;MACda,QAAQ,EAAE,SAAS;MACnBlB,OAAO,EAAE,IAAI,CAACS,QAAQ;MACtBW,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACjBJ,QAAQ,EAAEM,IAAI,CAACN,QAAQ;QACvBC,KAAK,EAAEK,IAAI,CAACL;MAChB,CAAC;IACL,CAAC,CAAC,CAACZ,IAAI,CAAC,IAAI,CAACC,eAAe,CAAC;EACjC;AAWJ;AAEA,MAAMe,IAAI,GAAG,IAAI1B,IAAI,CAAC;EAClBE,OAAO,EAAE,uBAAuB;EAChCC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEF,eAAeuB,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}