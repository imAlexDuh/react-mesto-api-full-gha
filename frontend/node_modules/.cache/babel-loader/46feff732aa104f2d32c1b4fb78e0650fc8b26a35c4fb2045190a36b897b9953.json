{"ast":null,"code":"export const BASE_URL = 'http://localhost:3000';\nfunction getResponseData(res) {\n  if (res.ok) {\n    return res.json();\n  } else {\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n}\nexport function register(email, password) {\n  return fetch(`${BASE_URL}/signup`, {\n    method: \"POST\",\n    credentials: 'include',\n    headers: {\n      'Accept': 'application/json',\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  }).then(res => getResponseData(res));\n}\nexport function authorize(email, password) {\n  return fetch(`${BASE_URL}/signin`, {\n    method: \"POST\",\n    credentials: 'include',\n    headers: {\n      'Accept': 'application/json',\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  }).then(res => getResponseData(res)).then(data => {\n    return data;\n  });\n}\nexport function checkToken() {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    }\n  }).then(res => getResponseData(res));\n}","map":{"version":3,"names":["BASE_URL","getResponseData","res","ok","json","Promise","reject","status","register","email","password","fetch","method","credentials","headers","body","JSON","stringify","then","authorize","data","checkToken"],"sources":["C:/Users/Алексей/dev/react-mesto-api-full-gha/frontend/src/utils/auth.js"],"sourcesContent":["export const BASE_URL = 'http://localhost:3000';\n\nfunction getResponseData(res) {\n  if(res.ok) {\n    return res.json()\n  } else {\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n}\n\nexport function register(email, password) {\n  return fetch(`${BASE_URL}/signup`, {\n    method: \"POST\",\n    credentials: 'include',\n    headers: {\n      'Accept': 'application/json',\n      \"Content-Type\": \"application/json\" \n    },\n    body: JSON.stringify({password, email})\n  })\n  .then((res) => getResponseData(res))\n}\n\nexport function authorize(email, password) {\n  return fetch(`${BASE_URL}/signin`, {\n    method: \"POST\",\n    credentials: 'include',\n    headers: {\n      'Accept': 'application/json',\n      \"Content-Type\": \"application/json\" \n    },\n    body: JSON.stringify({password, email})\n  })\n  .then((res) => getResponseData(res))\n  .then((data) => {\n    return data;\n  })\n}\nexport function checkToken() {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    }\n  })\n  .then((res) => getResponseData(res))\n}"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,uBAAuB;AAE/C,SAASC,eAAeA,CAACC,GAAG,EAAE;EAC5B,IAAGA,GAAG,CAACC,EAAE,EAAE;IACT,OAAOD,GAAG,CAACE,IAAI,CAAC,CAAC;EACnB,CAAC,MAAM;IACL,OAAOC,OAAO,CAACC,MAAM,CAAE,WAAUJ,GAAG,CAACK,MAAO,EAAC,CAAC;EAChD;AACF;AAEA,OAAO,SAASC,QAAQA,CAACC,KAAK,EAAEC,QAAQ,EAAE;EACxC,OAAOC,KAAK,CAAE,GAAEX,QAAS,SAAQ,EAAE;IACjCY,MAAM,EAAE,MAAM;IACdC,WAAW,EAAE,SAAS;IACtBC,OAAO,EAAE;MACP,QAAQ,EAAE,kBAAkB;MAC5B,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAACP,QAAQ;MAAED;IAAK,CAAC;EACxC,CAAC,CAAC,CACDS,IAAI,CAAEhB,GAAG,IAAKD,eAAe,CAACC,GAAG,CAAC,CAAC;AACtC;AAEA,OAAO,SAASiB,SAASA,CAACV,KAAK,EAAEC,QAAQ,EAAE;EACzC,OAAOC,KAAK,CAAE,GAAEX,QAAS,SAAQ,EAAE;IACjCY,MAAM,EAAE,MAAM;IACdC,WAAW,EAAE,SAAS;IACtBC,OAAO,EAAE;MACP,QAAQ,EAAE,kBAAkB;MAC5B,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAACP,QAAQ;MAAED;IAAK,CAAC;EACxC,CAAC,CAAC,CACDS,IAAI,CAAEhB,GAAG,IAAKD,eAAe,CAACC,GAAG,CAAC,CAAC,CACnCgB,IAAI,CAAEE,IAAI,IAAK;IACd,OAAOA,IAAI;EACb,CAAC,CAAC;AACJ;AACA,OAAO,SAASC,UAAUA,CAAA,EAAG;EAC3B,OAAOV,KAAK,CAAE,GAAEX,QAAS,WAAU,EAAE;IACnCY,MAAM,EAAE,KAAK;IACbE,OAAO,EAAE;MACP,QAAQ,EAAE,kBAAkB;MAC5B,cAAc,EAAE;IAClB;EACF,CAAC,CAAC,CACDI,IAAI,CAAEhB,GAAG,IAAKD,eAAe,CAACC,GAAG,CAAC,CAAC;AACtC"},"metadata":{},"sourceType":"module","externalDependencies":[]}