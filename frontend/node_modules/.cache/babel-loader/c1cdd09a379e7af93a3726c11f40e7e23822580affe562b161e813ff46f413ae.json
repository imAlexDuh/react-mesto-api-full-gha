{"ast":null,"code":"class Auth {\n  constructor({\n    baseUrl,\n    headers\n  }) {\n    this.checkToken = token => {\n      return fetch(`${this._url}/users/me`, {\n        method: 'GET',\n        credentials: 'include',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        }\n      }).then(this._handleResponse);\n    };\n    this._url = baseUrl;\n    this._headers = headers;\n  }\n  _handleResponse(res) {\n    if (!res.ok) {\n      return Promise.reject(`Ошибка ${res.status}`);\n    }\n    return res.json();\n  }\n  register(data) {\n    return fetch(`${this._url}/signup`, {\n      method: 'POST',\n      headers: this._headers,\n      credentials: 'include',\n      body: JSON.stringify({\n        password: email.password,\n        email: email.email\n      })\n    }).then(this._handleResponse);\n  }\n  auth(data) {\n    return fetch(`${this._url}/signin`, {\n      method: 'POST',\n      headers: this._headers,\n      credentials: 'include',\n      body: JSON.stringify({\n        password: data.password,\n        email: data.email\n      })\n    }).then(this._handleResponse);\n  }\n}\nconst auth = new Auth({\n  baseUrl: 'http://localhost:3001',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nexport default auth;","map":{"version":3,"names":["Auth","constructor","baseUrl","headers","checkToken","token","fetch","_url","method","credentials","Authorization","then","_handleResponse","_headers","res","ok","Promise","reject","status","json","register","data","body","JSON","stringify","password","email","auth"],"sources":["C:/Users/Алексей/dev/react-mesto-api-full-gha/frontend/src/utils/auth.js"],"sourcesContent":["class Auth {\r\n    constructor({ baseUrl, headers }) {\r\n        this._url = baseUrl;\r\n        this._headers = headers;\r\n    }\r\n\r\n    _handleResponse(res) {\r\n        if (!res.ok) {\r\n            return Promise.reject(`Ошибка ${res.status}`);\r\n        }\r\n        return res.json();\r\n    }\r\n\r\n    register(data) {\r\n        return fetch(`${this._url}/signup`, {\r\n            method: 'POST',\r\n            headers: this._headers,\r\n            credentials: 'include',\r\n            body: JSON.stringify({\r\n                password: email.password,\r\n                email: email.email\r\n            })\r\n        }).then(this._handleResponse)\r\n    }\r\n\r\n    auth(data) {\r\n        return fetch(`${this._url}/signin`, {\r\n            method: 'POST',\r\n            headers: this._headers,\r\n            credentials: 'include',\r\n            body: JSON.stringify({\r\n                password: data.password,\r\n                email: data.email\r\n            })\r\n        }).then(this._handleResponse)\r\n    }\r\n\r\n    checkToken = (token) => {\r\n        return fetch(`${this._url}/users/me`, {\r\n          method: 'GET',\r\n          credentials: 'include',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }).then(this._handleResponse)\r\n      };\r\n}\r\n\r\nconst auth = new Auth({\r\n    baseUrl: 'http://localhost:3001',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  });\r\n  \r\n  export default auth;"],"mappings":"AAAA,MAAMA,IAAI,CAAC;EACPC,WAAWA,CAAC;IAAEC,OAAO;IAAEC;EAAQ,CAAC,EAAE;IAAA,KAoClCC,UAAU,GAAIC,KAAK,IAAK;MACpB,OAAOC,KAAK,CAAE,GAAE,IAAI,CAACC,IAAK,WAAU,EAAE;QACpCC,MAAM,EAAE,KAAK;QACbC,WAAW,EAAE,SAAS;QACtBN,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClCO,aAAa,EAAG,UAASL,KAAM;QACjC;MACF,CAAC,CAAC,CAACM,IAAI,CAAC,IAAI,CAACC,eAAe,CAAC;IAC/B,CAAC;IA5CC,IAAI,CAACL,IAAI,GAAGL,OAAO;IACnB,IAAI,CAACW,QAAQ,GAAGV,OAAO;EAC3B;EAEAS,eAAeA,CAACE,GAAG,EAAE;IACjB,IAAI,CAACA,GAAG,CAACC,EAAE,EAAE;MACT,OAAOC,OAAO,CAACC,MAAM,CAAE,UAASH,GAAG,CAACI,MAAO,EAAC,CAAC;IACjD;IACA,OAAOJ,GAAG,CAACK,IAAI,CAAC,CAAC;EACrB;EAEAC,QAAQA,CAACC,IAAI,EAAE;IACX,OAAOf,KAAK,CAAE,GAAE,IAAI,CAACC,IAAK,SAAQ,EAAE;MAChCC,MAAM,EAAE,MAAM;MACdL,OAAO,EAAE,IAAI,CAACU,QAAQ;MACtBJ,WAAW,EAAE,SAAS;MACtBa,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACjBC,QAAQ,EAAEC,KAAK,CAACD,QAAQ;QACxBC,KAAK,EAAEA,KAAK,CAACA;MACjB,CAAC;IACL,CAAC,CAAC,CAACf,IAAI,CAAC,IAAI,CAACC,eAAe,CAAC;EACjC;EAEAe,IAAIA,CAACN,IAAI,EAAE;IACP,OAAOf,KAAK,CAAE,GAAE,IAAI,CAACC,IAAK,SAAQ,EAAE;MAChCC,MAAM,EAAE,MAAM;MACdL,OAAO,EAAE,IAAI,CAACU,QAAQ;MACtBJ,WAAW,EAAE,SAAS;MACtBa,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACjBC,QAAQ,EAAEJ,IAAI,CAACI,QAAQ;QACvBC,KAAK,EAAEL,IAAI,CAACK;MAChB,CAAC;IACL,CAAC,CAAC,CAACf,IAAI,CAAC,IAAI,CAACC,eAAe,CAAC;EACjC;AAYJ;AAEA,MAAMe,IAAI,GAAG,IAAI3B,IAAI,CAAC;EAClBE,OAAO,EAAE,uBAAuB;EAChCC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEF,eAAewB,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}