{"ast":null,"code":"class Api {\n  constructor(options) {\n    this._url = options.baseUrl;\n    this._headers = options.headers;\n    this._credentials = 'include';\n  }\n  _handleResponse(res) {\n    if (!res.ok) {\n      return Promise.reject(`Ошибка ${res.status}`);\n    }\n    return res.json();\n  }\n  getUserInfo() {\n    return fetch(`${this._url}/users/me`, {\n      headers: this._headers,\n      credentials: 'include'\n    }).then(this._handleResponse);\n  }\n  setUserInfo(data) {\n    return fetch(`${this._url}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      credentials: 'include',\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about\n      })\n    }).then(this._handleResponse);\n  }\n  getCardsInfo() {\n    return fetch(`${this._url}/cards`, {\n      headers: this._headers,\n      credentials: 'include'\n    }).then(this._handleResponse);\n  }\n  getAllData() {\n    return Promise.all([this.getUserInfo(), this.getCardsInfo()]);\n  }\n  addCard(data) {\n    return fetch(`${this._url}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      credentials: 'include',\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link\n      })\n    }).then(this._handleResponse);\n  }\n  pressLike(id) {\n    return fetch(`${this._url}/cards/likes/${id}`, {\n      method: 'PUT',\n      headers: this._headers,\n      credentials: 'include'\n    }).then(this._handleResponse);\n  }\n  unpressLike(id) {\n    return fetch(`${this._url}/cards/likes/${id}`, {\n      method: 'DELETE',\n      headers: this._headers,\n      credentials: 'include'\n    }).then(this._handleResponse);\n  }\n  deleteCard(id) {\n    return fetch(`${this._url}/cards/${id}`, {\n      method: 'DELETE',\n      headers: this._headers,\n      credentials: 'include'\n    }).then(this._handleResponse);\n  }\n  setUserAvatar(data) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      credentials: 'include',\n      body: JSON.stringify({\n        avatar: data.avatar\n      })\n    }).then(this._handleResponse);\n  }\n  changeLikeCardStatus(id, isLiked) {\n    if (isLiked) {\n      return this.unpressLike(id);\n    } else {\n      return this.pressLike(id);\n    }\n  }\n}\n;\nconst api = new Api({\n  baseUrl: 'http://localhost:3001',\n  credentials: 'include',\n  headers: {\n    authorization: '3381e851-a258-4777-88b5-08c3a96458a6',\n    'Content-Type': 'application/json'\n  }\n});\nexport default api;","map":{"version":3,"names":["Api","constructor","options","_url","baseUrl","_headers","headers","_credentials","_handleResponse","res","ok","Promise","reject","status","json","getUserInfo","fetch","credentials","then","setUserInfo","data","method","body","JSON","stringify","name","about","getCardsInfo","getAllData","all","addCard","link","pressLike","id","unpressLike","deleteCard","setUserAvatar","avatar","changeLikeCardStatus","isLiked","api","authorization"],"sources":["C:/Users/Алексей/dev/react-mesto-api-full-gha/frontend/src/utils/Api.js"],"sourcesContent":["class Api {\r\n  constructor(options) {\r\n    this._url = options.baseUrl;\r\n    this._headers = options.headers;\r\n    this._credentials = 'include';\r\n  }\r\n\r\n  _handleResponse(res) {\r\n    if (!res.ok) {\r\n      return Promise.reject(`Ошибка ${res.status}`);\r\n    }\r\n    return res.json();\r\n  }\r\n\r\n  getUserInfo() {\r\n    return fetch(`${this._url}/users/me`, {\r\n      headers: this._headers,\r\n      credentials: 'include'\r\n    }).then(this._handleResponse)\r\n  }\r\n\r\n  setUserInfo(data) {\r\n    return fetch(`${this._url}/users/me`, {\r\n      method: 'PATCH',\r\n      headers: this._headers,\r\n      credentials: 'include',\r\n      body: JSON.stringify({\r\n        name: data.name,\r\n        about: data.about\r\n      })\r\n    }).then(this._handleResponse)\r\n  }\r\n\r\n  getCardsInfo() {\r\n    return fetch(`${this._url}/cards`, {\r\n      headers: this._headers,\r\n      credentials: 'include',\r\n    }).then(this._handleResponse)\r\n  }\r\n\r\n  getAllData() {\r\n    return Promise.all([this.getUserInfo(), this.getCardsInfo()]);\r\n  }\r\n\r\n  addCard(data) {\r\n    return fetch(`${this._url}/cards`, {\r\n      method: 'POST',\r\n      headers: this._headers,\r\n      credentials: 'include',\r\n      body: JSON.stringify({\r\n        name: data.name,\r\n        link: data.link\r\n      })\r\n    }).then(this._handleResponse)\r\n  }\r\n\r\n  pressLike(id) {\r\n    return fetch(`${this._url}/cards/likes/${id}`, {\r\n      method: 'PUT',\r\n      headers: this._headers,\r\n      credentials: 'include'\r\n    }).then(this._handleResponse)\r\n  }\r\n\r\n  unpressLike(id) {\r\n    return fetch(`${this._url}/cards/likes/${id}`, {\r\n      method: 'DELETE',\r\n      headers: this._headers,\r\n      credentials: 'include'\r\n    }).then(this._handleResponse)\r\n  }\r\n\r\n  deleteCard(id) {\r\n    return fetch(`${this._url}/cards/${id}`, {\r\n      method: 'DELETE',\r\n      headers: this._headers,\r\n      credentials: 'include'\r\n    }).then(this._handleResponse)\r\n  }\r\n\r\n  setUserAvatar(data) {\r\n    return fetch(`${this._url}/users/me/avatar`, {\r\n      method: 'PATCH',\r\n      headers: this._headers,\r\n      credentials: 'include',\r\n      body: JSON.stringify({\r\n        avatar: data.avatar\r\n      })\r\n    }).then(this._handleResponse)\r\n  }\r\n\r\n  changeLikeCardStatus(id, isLiked) {\r\n    if (isLiked) {\r\n      return this.unpressLike(id);\r\n    } else {\r\n      return this.pressLike(id);\r\n    }\r\n  }\r\n\r\n\r\n}; \r\n\r\nconst api = new Api({\r\n  baseUrl: 'http://localhost:3001',\r\n  credentials: 'include',\r\n  headers: {\r\n      authorization: '3381e851-a258-4777-88b5-08c3a96458a6',\r\n      'Content-Type': 'application/json'\r\n  }\r\n});\r\n\r\nexport default api;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}