{"ast":null,"code":"class Auth {\n  constructor(options) {\n    this._url = options.baseUrl;\n    this._headers = options._headers;\n  }\n  _handleResponse(res) {\n    if (!res.ok) {\n      return Promise.reject(`Ошибка ${res.status}`);\n    }\n    return res.json();\n  }\n  register(data) {\n    return fetch(`${this._url}/signup`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        password: data.password,\n        email: data.email\n      })\n    }).then(this._handleResponse);\n  }\n  auth(data) {\n    return fetch(`${this._url}/signin`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        password: data.password,\n        email: data.email\n      })\n    }).then(this._handleResponse);\n  }\n  chcekToken(token) {\n    return fetch(`${this._url}/users/me`, {\n      headers: {\n        ...this._headers,\n        Authorization: `Bearer ${token}`\n      }\n    }).then(this._handleOriginalResponse);\n  }\n}\nconst auth = new Auth({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-72',\n  headers: {\n    authorization: '3381e851-a258-4777-88b5-08c3a96458a6',\n    'Content-Type': 'application/json'\n  }\n});\nexport default auth;","map":{"version":3,"names":["Auth","constructor","options","_url","baseUrl","_headers","_handleResponse","res","ok","Promise","reject","status","json","register","data","fetch","method","headers","body","JSON","stringify","password","email","then","auth","chcekToken","token","Authorization","_handleOriginalResponse","authorization"],"sources":["C:/Users/Алексей/dev/react-mesto-auth/src/utils/auth.js"],"sourcesContent":["class Auth {\r\n    constructor(options) {\r\n        this._url = options.baseUrl;\r\n        this._headers = options._headers;\r\n    }\r\n\r\n    _handleResponse(res) {\r\n        if (!res.ok) {\r\n            return Promise.reject(`Ошибка ${res.status}`);\r\n        }\r\n        return res.json();\r\n    }\r\n\r\n    register(data) {\r\n        return fetch(`${this._url}/signup`, {\r\n            method: 'POST',\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                password: data.password,\r\n                email: data.email\r\n            })\r\n        }).then(this._handleResponse)\r\n    }\r\n\r\n    auth(data) {\r\n        return fetch(`${this._url}/signin`, {\r\n            method: 'POST',\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                password: data.password,\r\n                email: data.email\r\n            })\r\n        }).then(this._handleResponse)\r\n    }\r\n\r\n    chcekToken(token) {\r\n        return fetch(`${this._url}/users/me`, {\r\n            headers: {\r\n                ...this._headers,\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        }).then(this._handleOriginalResponse)\r\n    }\r\n}\r\n\r\nconst auth = new Auth({\r\n    baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-72',\r\n    headers: {\r\n        authorization: '3381e851-a258-4777-88b5-08c3a96458a6',\r\n        'Content-Type': 'application/json'\r\n    }\r\n  });\r\n  \r\n  export default auth;"],"mappings":"AAAA,MAAMA,IAAI,CAAC;EACPC,WAAWA,CAACC,OAAO,EAAE;IACjB,IAAI,CAACC,IAAI,GAAGD,OAAO,CAACE,OAAO;IAC3B,IAAI,CAACC,QAAQ,GAAGH,OAAO,CAACG,QAAQ;EACpC;EAEAC,eAAeA,CAACC,GAAG,EAAE;IACjB,IAAI,CAACA,GAAG,CAACC,EAAE,EAAE;MACT,OAAOC,OAAO,CAACC,MAAM,CAAE,UAASH,GAAG,CAACI,MAAO,EAAC,CAAC;IACjD;IACA,OAAOJ,GAAG,CAACK,IAAI,CAAC,CAAC;EACrB;EAEAC,QAAQA,CAACC,IAAI,EAAE;IACX,OAAOC,KAAK,CAAE,GAAE,IAAI,CAACZ,IAAK,SAAQ,EAAE;MAChCa,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE,IAAI,CAACZ,QAAQ;MACtBa,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACjBC,QAAQ,EAAEP,IAAI,CAACO,QAAQ;QACvBC,KAAK,EAAER,IAAI,CAACQ;MAChB,CAAC;IACL,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAACjB,eAAe,CAAC;EACjC;EAEAkB,IAAIA,CAACV,IAAI,EAAE;IACP,OAAOC,KAAK,CAAE,GAAE,IAAI,CAACZ,IAAK,SAAQ,EAAE;MAChCa,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE,IAAI,CAACZ,QAAQ;MACtBa,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACjBC,QAAQ,EAAEP,IAAI,CAACO,QAAQ;QACvBC,KAAK,EAAER,IAAI,CAACQ;MAChB,CAAC;IACL,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAACjB,eAAe,CAAC;EACjC;EAEAmB,UAAUA,CAACC,KAAK,EAAE;IACd,OAAOX,KAAK,CAAE,GAAE,IAAI,CAACZ,IAAK,WAAU,EAAE;MAClCc,OAAO,EAAE;QACL,GAAG,IAAI,CAACZ,QAAQ;QAChBsB,aAAa,EAAG,UAASD,KAAM;MACnC;IACJ,CAAC,CAAC,CAACH,IAAI,CAAC,IAAI,CAACK,uBAAuB,CAAC;EACzC;AACJ;AAEA,MAAMJ,IAAI,GAAG,IAAIxB,IAAI,CAAC;EAClBI,OAAO,EAAE,6CAA6C;EACtDa,OAAO,EAAE;IACLY,aAAa,EAAE,sCAAsC;IACrD,cAAc,EAAE;EACpB;AACF,CAAC,CAAC;AAEF,eAAeL,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}